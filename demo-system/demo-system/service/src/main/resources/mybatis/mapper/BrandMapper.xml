<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.system.dao.BrandMapper">
    <resultMap id="BaseResultMap" type="com.manage.system.bean.Brand">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="is_del" property="isDel" jdbcType="INTEGER"/>
        <result column="logo" property="logo" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="establish_year" property="establishYear" jdbcType="INTEGER"/>
        <result column="origin_place" property="originPlace" jdbcType="VARCHAR"/>
        <result column="brand_popular" property="brandPopular" jdbcType="INTEGER"/>
        <result column="join_condition" property="joinCondition" jdbcType="VARCHAR"/>

        <result column="label_auth" property="labelAuth" jdbcType="INTEGER"/>
        <result column="label_honest" property="labelHonest" jdbcType="INTEGER"/>
        <result column="label_vip" property="labelVip" jdbcType="INTEGER"/>
        <result column="label_quality" property="labelQuality" jdbcType="INTEGER"/>

        <result column="description" property="description" typeHandler="com.manage.system.handler.ConvertBlobTypeHandler"/>

        <result column="logo_a" property="logoA" jdbcType="VARCHAR"/>
        <result column="logo_b" property="logoB" jdbcType="VARCHAR"/>
        <result column="logo_c" property="logoC" jdbcType="VARCHAR"/>
        <result column="logo_viewpoint" property="logoViewpoint" jdbcType="VARCHAR"/>

        <result column="is_invest" property="isInvest" jdbcType="INTEGER"/>

        <result column="invest_type" property="investType" jdbcType="VARCHAR"/>
        <result column="invest_area" property="investArea" jdbcType="VARCHAR"/>

        <result column="invest_policy" property="investPolicy" typeHandler="com.manage.system.handler.ConvertBlobTypeHandler"/>

        <result column="create_time" property="createTime" jdbcType="OTHER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="is_publish" property="isPublish" jdbcType="INTEGER"/>

        <result column="rec_index" property="recIndex" jdbcType="INTEGER"/>
        <result column="rec_type_index" property="recTypeIndex" jdbcType="INTEGER"/>
        <result column="rec_type_rank" property="recTypeRank" jdbcType="INTEGER"/>
        <result column="rec_type_infor" property="recTypeInfor" jdbcType="INTEGER"/>
        <result column="rec_infor_head" property="recInforHead" jdbcType="INTEGER"/>
        <result column="rec_infor_eval" property="recInforEval" jdbcType="INTEGER"/>
        <result column="rec_infor_detail" property="recInforDetail" jdbcType="INTEGER"/>

        <result column="type_name" property="typeName" jdbcType="VARCHAR"/>
        <result column="official_website" property="officialWebsite" jdbcType="VARCHAR"/>
        <result column="online_shop_url" property="onlineShopUrl" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findByKeyWord" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            t.NAME as type_name,
            b.*
        FROM
            `t_brand` b
            INNER JOIN t_type t ON t.id = b.type_id
        WHERE
            b.is_publish = #{isPublish}
            and (
                t.NAME LIKE CONCAT('%',#{keyWord},'%')
                OR b.NAME LIKE CONCAT('%',#{keyWord},'%')
                OR b.company_name LIKE CONCAT('%',#{keyWord},'%')
            )
            limit #{pageNumber}, #{pageSize}
    </select>

    <select id="countByTypeId" resultType="int">
        select count(1) from t_brand where type_id = #{typeId}
    </select>

    <select id="findById" resultMap="BaseResultMap">
        select * from t_brand where id = #{id}
    </select>

    <select id="getByIdWithType" resultMap="BaseResultMap">
        select b.*, t.name as type_name from t_brand b
        inner join t_type t on t.id = b.type_id
        where is_publish = #{isPublish} and b.id = #{id}
    </select>

    <select id="findAll" resultType="com.manage.system.dto.BrandDTO">
        select * from t_brand
        <where>
            <if test="typeId != null">
                and type_id = #{typeId}
            </if>
        </where>
    </select>

    <select id="findPageByTypeId" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            *
        FROM
            t_brand
        <where>
            <if test="isPublish != null">
                and is_publish = #{isPublish}
            </if>
            <if test="typeId != null">
                and type_id = #{typeId}
            </if>
        </where>
        ORDER BY
            brand_popular DESC
            LIMIT #{pageNumber}, #{pageSize};
    </select>

    <select id="findPopularList" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            t.NAME AS typeName,
            b.*
        FROM
            t_brand b
            INNER JOIN t_type t ON t.id = b.type_id
        WHERE
            b.is_publish = #{isPublish}
        and
            b.brand_popular IN ( SELECT max( a.brand_popular ) FROM t_brand a GROUP BY a.type_id )
        AND b.brand_popular != 0
    </select>

    <select id="findWeekPopular" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            count( r.id ) as increaseNum,
            b.*
        FROM
            t_brand b
            INNER JOIN t_brand_popular_record r ON r.brand_id = b.id
            AND YEARWEEK( DATE_FORMAT( r.create_time, '%Y-%m-%d' ) ) = YEARWEEK( NOW( ) )
        WHERE
            b.is_publish = #{isPublish}
        and
            b.brand_popular > 0
        GROUP BY
            b.id having count(r.id) > 0
            order by count(r.id) desc
            LIMIT #{pageNumber},#{pageSize}
    </select>

    <select id="findMonthPopular" resultType="com.manage.system.dto.BrandDTO">
        SELECT
        count( r.id ) as increaseNum,
            b.*
        FROM
            t_brand b
            inner JOIN t_brand_popular_record r ON r.brand_id = b.id
            AND DATE_FORMAT(r.create_time,'%Y%m')=DATE_FORMAT(CURDATE(),'%Y%m')
        WHERE
            b.is_publish = #{isPublish}
        GROUP BY
            b.id having count(r.id) > 0
            order by count(r.id) desc
            LIMIT #{pageNumber},#{pageSize}
    </select>

    <select id="findRandom" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            *
        FROM
            t_brand
        WHERE
            is_publish = #{isPublish}
        <if test="typeId != null">
            and type_id = #{typeId}
        </if>
        <if test="recIndex != null">
            and rec_index = #{recIndex}
        </if>
        <if test="recTypeIndex != null">
            and rec_type_index = #{recTypeIndex}
        </if>
        <if test="recTypeRank != null">
            and rec_type_rank = #{recTypeRank}
        </if>
        <if test="recTypeInfor != null">
            and rec_type_infor = #{recTypeInfor}
        </if>
        <if test="recInforHead != null">
            and rec_infor_head = #{recInforHead}
        </if>
        <if test="recInforEval != null">
            and rec_infor_eval = #{recInforEval}
        </if>
        <if test="recInforDetail != null">
            and rec_infor_detail = #{recInforDetail}
        </if>
    </select>

    <select id="findAllPopular" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            *, brand_popular as increaseNum
        FROM
            t_brand
        WHERE
          is_publish = #{isPublish}
        and
            brand_popular > 0
        <if test="typeId != null">
            and type_id = #{typeId}
        </if>
        ORDER BY
            brand_popular DESC
            LIMIT  #{pageNumber},#{pageSize}
    </select>



    <update id="addPopularById">
        update t_brand set brand_popular = brand_popular+1 where id = #{id}
    </update>
</mapper>