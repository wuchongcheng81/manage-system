<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.system.dao.BrandMapper">
    <resultMap id="BaseResultMap" type="com.manage.system.bean.Brand">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="is_del" property="isDel" jdbcType="INTEGER"/>
        <result column="logo" property="logo" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="establish_year" property="establishYear" jdbcType="INTEGER"/>
        <result column="origin_place" property="originPlace" jdbcType="VARCHAR"/>
        <result column="brand_popular" property="brandPopular" jdbcType="INTEGER"/>
        <result column="join_condition" property="joinCondition" jdbcType="VARCHAR"/>

        <result column="label_auth" property="labelAuth" jdbcType="INTEGER"/>
        <result column="label_honest" property="labelHonest" jdbcType="INTEGER"/>
        <result column="label_vip" property="labelVip" jdbcType="INTEGER"/>
        <result column="label_quality" property="labelQuality" jdbcType="INTEGER"/>

        <result column="description" property="description" typeHandler="com.manage.system.handler.ConvertBlobTypeHandler"/>

        <result column="logo_a" property="logoA" jdbcType="VARCHAR"/>
        <result column="logo_b" property="logoB" jdbcType="VARCHAR"/>
        <result column="logo_c" property="logoC" jdbcType="VARCHAR"/>
        <result column="logo_viewpoint" property="logoViewpoint" jdbcType="VARCHAR"/>

        <result column="is_invest" property="isInvest" jdbcType="INTEGER"/>

        <result column="invest_type" property="investType" jdbcType="VARCHAR"/>
        <result column="invest_area" property="investArea" jdbcType="VARCHAR"/>

        <result column="invest_policy" property="investPolicy" typeHandler="com.manage.system.handler.ConvertBlobTypeHandler"/>

        <result column="create_time" property="createTime" jdbcType="OTHER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="is_publish" property="isPublish" jdbcType="INTEGER"/>

        <result column="rec_index" property="recIndex" jdbcType="INTEGER"/>
        <result column="rec_type_index" property="recTypeIndex" jdbcType="INTEGER"/>
        <result column="rec_type_rank" property="recTypeRank" jdbcType="INTEGER"/>
        <result column="rec_type_infor" property="recTypeInfor" jdbcType="INTEGER"/>
        <result column="rec_infor_head" property="recInforHead" jdbcType="INTEGER"/>
        <result column="rec_infor_eval" property="recInforEval" jdbcType="INTEGER"/>
        <result column="rec_infor_detail" property="recInforDetail" jdbcType="INTEGER"/>
    </resultMap>

    <select id="findById" resultMap="BaseResultMap">
        select * from t_brand where id = #{id}
    </select>

    <select id="findPopularList" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            *
        FROM
            t_brand
        WHERE
            brand_popular IN ( SELECT max( brand_popular ) FROM t_brand GROUP BY type_id )
            AND brand_popular != 0
    </select>

    <select id="findWeekPopular" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            count( r.id ) as increaseNum,
            b.*
        FROM
            t_brand b
            INNER JOIN t_brand_popular_record r ON r.brand_id = b.id
            AND YEARWEEK( DATE_FORMAT( r.create_time, '%Y-%m-%d' ) ) = YEARWEEK( NOW( ) )
        WHERE
            b.brand_popular > 0
        GROUP BY
            b.id having count(r.id) > 0
            order by count(r.id) desc
            LIMIT #{pageNumber},#{pageSize}
    </select>

    <select id="findMonthPopular" resultType="com.manage.system.dto.BrandDTO">
        SELECT
        count( r.id ) as increaseNum,
            b.*
        FROM
            t_brand b
            inner JOIN t_brand_popular_record r ON r.brand_id = b.id
            AND DATE_FORMAT(r.create_time,'%Y%m')=DATE_FORMAT(CURDATE(),'%Y%m')
        GROUP BY
            b.id having count(r.id) > 0
            order by count(r.id) desc
            LIMIT #{pageNumber},#{pageSize}
    </select>

    <select id="findAllPopular" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            *
        FROM
            t_brand
        WHERE
            brand_popular > 0
        ORDER BY
            brand_popular DESC
            LIMIT  #{pageNumber},#{pageSize}
    </select>

    <select id="findRandom" resultType="com.manage.system.dto.BrandDTO">
        SELECT
            *
        FROM
            t_brand
        WHERE
            id >= ( ( SELECT MAX( id ) FROM t_brand ) - ( SELECT MIN( id ) FROM t_brand ) ) * RAND( ) + ( SELECT MIN( id ) FROM t_brand )
            LIMIT 6;
    </select>
</mapper>